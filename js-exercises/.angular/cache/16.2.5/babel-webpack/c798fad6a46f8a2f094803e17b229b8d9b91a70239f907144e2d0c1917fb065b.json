{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CarService {\n  constructor() {\n    this._cars = [];\n  }\n  get cars() {\n    return this._cars;\n  }\n  addCar(car) {\n    this._cars.push(car);\n  }\n  static #_ = this.ɵfac = function CarService_Factory(t) {\n    return new (t || CarService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CarService,\n    factory: CarService.ɵfac,\n    providedIn: 'root'\n  });\n}\nclass Shape {\n  area() {\n    console.log('Calculating area...');\n  }\n}\nclass Circle extends Shape {\n  area() {\n    console.log('Calculating area of a circle...');\n  }\n}\nclass Square extends Shape {\n  area() {\n    console.log('Calculating area of a square...');\n  }\n}\nfunction calculateArea(shape) {\n  shape.area();\n}\nconst circle = new Circle();\nconst square = new Square();\ncalculateArea(circle); // Output: Calculating area of a circle...\ncalculateArea(square); // Output: Calculating area of a square...","map":{"version":3,"names":["CarService","constructor","_cars","cars","addCar","car","push","_","_2","factory","ɵfac","providedIn","Shape","area","console","log","Circle","Square","calculateArea","shape","circle","square"],"sources":["C:\\Exercises\\js-exercises\\src\\app\\car.component.ts\\car.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Car } from '../classes';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CarService {\r\n  private _cars: Car[] = [];\r\n  get cars(): Car[] {\r\n    return this._cars;\r\n  }\r\n  addCar(car: Car) {\r\n    this._cars.push(car);\r\n  }\r\n}\r\n\r\nclass Shape {\r\n  area() {\r\n    console.log('Calculating area...');\r\n  }\r\n}\r\n\r\nclass Circle extends Shape {\r\n  area() {\r\n    console.log('Calculating area of a circle...');\r\n  }\r\n}\r\n\r\nclass Square extends Shape {\r\n  area() {\r\n    console.log('Calculating area of a square...');\r\n  }\r\n}\r\n\r\nfunction calculateArea(shape) {\r\n  shape.area();\r\n}\r\n\r\nconst circle = new Circle();\r\nconst square = new Square();\r\n\r\ncalculateArea(circle); // Output: Calculating area of a circle...\r\ncalculateArea(square); // Output: Calculating area of a square...\r\n"],"mappings":";AAMA,OAAM,MAAOA,UAAU;EAHvBC,YAAA;IAIU,KAAAC,KAAK,GAAU,EAAE;;EACzB,IAAIC,IAAIA,CAAA;IACN,OAAO,IAAI,CAACD,KAAK;EACnB;EACAE,MAAMA,CAACC,GAAQ;IACb,IAAI,CAACH,KAAK,CAACI,IAAI,CAACD,GAAG,CAAC;EACtB;EAAC,QAAAE,CAAA,G;qBAPUP,UAAU;EAAA;EAAA,QAAAQ,EAAA,G;WAAVR,UAAU;IAAAS,OAAA,EAAVT,UAAU,CAAAU,IAAA;IAAAC,UAAA,EAFT;EAAM;;AAYpB,MAAMC,KAAK;EACTC,IAAIA,CAAA;IACFC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACpC;;AAGF,MAAMC,MAAO,SAAQJ,KAAK;EACxBC,IAAIA,CAAA;IACFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD;;AAGF,MAAME,MAAO,SAAQL,KAAK;EACxBC,IAAIA,CAAA;IACFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD;;AAGF,SAASG,aAAaA,CAACC,KAAK;EAC1BA,KAAK,CAACN,IAAI,EAAE;AACd;AAEA,MAAMO,MAAM,GAAG,IAAIJ,MAAM,EAAE;AAC3B,MAAMK,MAAM,GAAG,IAAIJ,MAAM,EAAE;AAE3BC,aAAa,CAACE,MAAM,CAAC,CAAC,CAAC;AACvBF,aAAa,CAACG,MAAM,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}